{"ast":null,"code":"var _jsxFileName = \"/Users/john/projects/pa_tree_selector/pa-tree-selector/src/components/FetchCSVData.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FetchCSVData() {\n  _s();\n  const [csvData, setCsvData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchCSVData();\n  }, []);\n  const fetchCSVData = () => {\n    const csvUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSN9qYza-MdxZdNBnWK58LbIFS6v6UIdYXPwrNgCewtPqVuYdt2g7HmzXXG9x6kshf_-8Cctgj2xTOp/pub?output=csv';\n    axios.get(csvUrl).then(response => {\n      const parsedCsvData = parseCSV(response.data);\n      setCsvData(parsedCsvData);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching CSV data:', error);\n      setError('Failed to fetch CSV data');\n      setLoading(false);\n    });\n  };\n  function parseCSV(csvText) {\n    const rows = csvText.split(/\\r?\\n/);\n    const headers = rows[0].split(',');\n    const data = [];\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = rows[i].split(',');\n      const rowObject = {};\n      for (let j = 0; j < headers.length; j++) {\n        rowObject[headers[j]] = rowData[j];\n      }\n      data.push(rowObject);\n    }\n    return data;\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSV Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: csvData.length > 0 && Object.keys(csvData[0]).map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: csvData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchCSVData, \"ITyFl3fSJdBnmyGPRzAaJQT0NZo=\");\n_c = FetchCSVData;\nvar _c;\n$RefreshReg$(_c, \"FetchCSVData\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","FetchCSVData","_s","csvData","setCsvData","loading","setLoading","error","setError","fetchCSVData","csvUrl","get","then","response","parsedCsvData","parseCSV","data","catch","console","csvText","rows","split","headers","i","length","rowData","rowObject","j","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","header","index","row","rowIndex","values","value","cellIndex","_c","$RefreshReg$"],"sources":["/Users/john/projects/pa_tree_selector/pa-tree-selector/src/components/FetchCSVData.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function FetchCSVData() {\n  const [csvData, setCsvData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchCSVData();\n  }, []);\n\n  const fetchCSVData = () => {\n    const csvUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSN9qYza-MdxZdNBnWK58LbIFS6v6UIdYXPwrNgCewtPqVuYdt2g7HmzXXG9x6kshf_-8Cctgj2xTOp/pub?output=csv';\n\n    axios.get(csvUrl)\n      .then((response) => {\n        const parsedCsvData = parseCSV(response.data);\n        setCsvData(parsedCsvData);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching CSV data:', error);\n        setError('Failed to fetch CSV data');\n        setLoading(false);\n      });\n  };\n\n  function parseCSV(csvText) {\n    const rows = csvText.split(/\\r?\\n/);\n    const headers = rows[0].split(',');\n    const data = [];\n    for (let i = 1; i < rows.length; i++) {\n      const rowData = rows[i].split(',');\n      const rowObject = {};\n      for (let j = 0; j < headers.length; j++) {\n        rowObject[headers[j]] = rowData[j];\n      }\n      data.push(rowObject);\n    }\n    return data;\n  }\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h2>CSV Data</h2>\n      <table>\n        <thead>\n          <tr>\n            {csvData.length > 0 && Object.keys(csvData[0]).map((header, index) => (\n              <th key={index}>{header}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {csvData.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {Object.values(row).map((value, cellIndex) => (\n                <td key={cellIndex}>{value}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}